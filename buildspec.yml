version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
 
    commands:
      - echo "Installing dependencies..."
      - pip install -r tests/requirements.txt
      - apt-get install -y jq
      - npm install -g allure-commandline --save-dev
      - allure --version

  pre_build:
    commands:
      - echo "Setting up the environment..."
      - export PYTHONPATH=$PYTHONPATH:$(pwd)  # Set PYTHONPATH to include the current directory
      - echo "Environment setup complete."
      - echo "Fetching commit ID and branch name..."
      # The following git commands may fail in a CodePipeline environment, consider using env vars from CodePipeline
      - export GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD || echo $CODEBUILD_SOURCE_VERSION)
      - export GIT_COMMIT=$(git rev-parse HEAD || echo $CODEBUILD_RESOLVED_SOURCE_VERSION)

  build:
    commands:
      - echo "Running pytest tests..."
      - env
      # - pytest tests 
      # Exercise 3: Add allure report generation and upload to S3
      # comment previous line and uncomment the following line to run allure report generation and upload to S3
      - pytest tests --alluredir=$ALLURE_RESULTS_DIR  
        
  post_build:
    commands:
    # Exercise 3: Add allure report generation and upload to S3
    # uncomment the following line to run allure report generation and upload to S3
      - echo "Ensuring S3 bucket structure exists"
      - aws s3api head-object --bucket $ALLURE_REPORT_BUCKET --key allure-report/ || aws s3api put-object --bucket $ALLURE_REPORT_BUCKET --key allure-report/ 
      - echo "Downloading existing Allure history"
      - aws s3 sync s3://$ALLURE_REPORT_BUCKET/history/ $ALLURE_RESULTS_DIR/history/ || true
      - echo "Generating Allure report"
      - allure generate $ALLURE_RESULTS_DIR -o allure-report --clean
      - echo "Uploading Allure report to S3"
      - aws s3 sync allure-report s3://$ALLURE_REPORT_BUCKET/ --delete
      - echo "Updating Allure history"
      - aws s3 sync allure-report/history s3://$ALLURE_REPORT_BUCKET/history/ --delete

artifacts:
  files:
    - '**/*'
  name: test-output
  base-directory: allure-report

reports:
  pytest_report:
    files:
      - results.xml
    base-directory: reports/
    file-format: JUNITXML