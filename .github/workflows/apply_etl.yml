name: Terraform Apply ETL Infrastructure

on:
  push:
    branches:
      - master
      - feature/*

permissions:
  contents: read
  issues: write

jobs:
  terraform_apply_etl:
    name: Terraform Apply ETL
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies for Lambda Generator
      run: |
        python -m pip install --upgrade pip
        pip install -r iac_etl/lambda_generator_package/requirements.txt -t iac_etl/lambda_generator_package

    - name: Package Lambda Generator Function
      run: |
        zip -r lambda_generator_package.zip .
      working-directory: iac_etl/lambda_generator_package

    - name: Install dependencies for Lambda ETL
      run: |
        mkdir python
        pip install -r requirements.txt -t python/
        zip -r lambda_layer.zip python

    - name: Package Lambda ETL Function
      run: |
        zip -r lambda_etl.zip .
      working-directory: iac_etl/lambda_etl

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Prepare variables
      run: |
        branch_name=$(echo "${GITHUB_REF#refs/heads/}")
        repo_name=$(basename ${{ github.repository }})
        echo "BRANCH_NAME=$branch_name" >> $GITHUB_ENV
        echo "REPO_NAME=$repo_name" >> $GITHUB_ENV

    - name: Make modify_tfvars.sh executable
      run: chmod +x ./scripts/modify_tfvars.sh

    - name: Run modify_tfvars.sh
      run: ./scripts/modify_tfvars.sh ${{ github.ref_name }} ${{ github.repository }} dev iac_etl

    - name: Run ls
      run: ls

    - name: Upload Lambda Packages and Layer to S3
      run: |
        aws s3 cp lambda_generator_package.zip s3://etl-tutorial-bucket-dev/lambda_generator_package.zip
        aws s3 cp lambda_etl.zip s3://etl-tutorial-bucket-dev/lambda_etl.zip
        aws s3 cp lambda_layer.zip s3://etl-tutorial-bucket-dev/lambda_layer.zip

    - name: Terraform Init
      working-directory: ./iac_etl
      run: terraform init -input=false

    - name: Terraform Apply
      working-directory: ./iac_etl
      run: terraform apply -auto-approve
