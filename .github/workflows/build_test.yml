name: Terraform Plan Check

on:
  push:
    branches:
      - master
      - feature/*
  pull_request:  # To ensure that pull requests are also checked

permissions:
  contents: read
  issues: write

jobs:
  terraform_plan_check:
    name: Terraform Plan Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Make setup_infrastructure.sh executable
        run: chmod +x ./scripts/setup_infrastructure.sh

      - name: Run setup_infrastructure.sh
        run: ./scripts/setup_infrastructure.sh ${{ github.actor }}


      # Initialize Terraform with Local Backend for Backend Infrastructure
      - name: Initialize Terraform with Local Backend for Backend
        working-directory: ./iac/backend
        run: |
          echo "Using local backend for Terraform."
          cat > backend.tf <<EOF
          terraform {
            backend "local" {
              path = "./terraform.tfstate"
            }
          }
          EOF
          terraform init

      - name: Terraform Plan for Backend
        working-directory: ./iac/backend
        run: terraform plan

      # Initialize Terraform with Local Backend for CICD Infrastructure
      - name: Initialize Terraform with Local Backend for CICD
        working-directory: ./iac/cicd
        run: |
          echo "Using local backend for Terraform."
          cat > backend.tf <<EOF
          terraform {
            backend "local" {
              path = "./terraform.tfstate"
            }
          }
          EOF
          terraform init

      - name: Terraform Plan for CICD
        working-directory: ./iac/cicd
        run: terraform plan

      # Initialize Terraform with Local Backend for ETL Infrastructure
      - name: Initialize Terraform with Local Backend for ETL
        working-directory: ./iac/etl
        run: |
          echo "Using local backend for Terraform."
          cat > backend.tf <<EOF
          terraform {
            backend "local" {
              path = "./terraform.tfstate"
            }
          }
          EOF
          terraform init

      - name: Terraform Plan for ETL
        working-directory: ./iac/etl
        run: terraform plan

      - name: Get branch name
        id: branch-name
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"

      - name: Zip repository
        run: git archive -v -o repo.zip --format=zip HEAD

      - name: Upload to S3
        run: |
          aws s3 cp repo.zip s3://${{ secrets.ARTIFACT_BUCKET }}/${{ steps.branch-name.outputs.branch }}/repo.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-west-1
